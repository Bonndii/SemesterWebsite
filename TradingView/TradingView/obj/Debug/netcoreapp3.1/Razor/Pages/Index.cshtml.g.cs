#pragma checksum "E:\C# Programs\TradingView\TradingView\Pages\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "14cf4cd9cee7c6bc45ea1ae2f3810d611b2b8216"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(TradingView.Pages.Pages_Index), @"mvc.1.0.razor-page", @"/Pages/Index.cshtml")]
namespace TradingView.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "E:\C# Programs\TradingView\TradingView\Pages\_ViewImports.cshtml"
using TradingView;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"14cf4cd9cee7c6bc45ea1ae2f3810d611b2b8216", @"/Pages/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"099b780f5a11adf66e0356f040a2c0f99b5b79ae", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Index : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/trading.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("tv-feed-widget__title-link js-widget-title-link"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-page", "/Indexes", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 3 "E:\C# Programs\TradingView\TradingView\Pages\Index.cshtml"
  
    ViewData["Title"] = "Home page";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "14cf4cd9cee7c6bc45ea1ae2f3810d611b2b82164702", async() => {
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "14cf4cd9cee7c6bc45ea1ae2f3810d611b2b82164964", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n<!-- TradingView Widget BEGIN -->\r\n<div class=\"tradingview-widget-container\" id=\"index\">\r\n    <div class=\"tv-feed-widget__header-inner\">\r\n        <h3 class=\"tv-feed-widget__title js-hotlists-dropdown\">\r\n            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "14cf4cd9cee7c6bc45ea1ae2f3810d611b2b82167081", async() => {
                WriteLiteral("\r\n                Индексы<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"8\" height=\"14\" viewBox=\"0 0 8 14\">\r\n                </svg>\r\n            ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Page = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
        </h3>
     </div>
        <div class=""tradingview-widget-container__widget""></div>
        <div class=""tradingview-widget-copyright""><a href=""https://ru.tradingview.com/markets/indices/"" rel=""noopener"" target=""_blank""><span class=""blue-text"">Основные</span></a> от TradingView</div>
        <script type=""text/javascript"" src=""https://s3.tradingview.com/external-embedding/embed-widget-market-overview.js"" async>
            {
                ""colorTheme"": ""light"",
                    ""dateRange"": ""12M"",
                        ""showChart"": true,
                            ""locale"": ""ru"",
                                ""largeChartUrl"": ""https://localhost:44347/{tvexchange}/{tvsymbol}"",
                                    ""isTransparent"": false,
                                        ""showSymbolLogo"": true,
                                            ""width"": ""400"",
                                                ""height"": ""660"",
                                                    ""plot");
            WriteLiteral(@"LineColorGrowing"": ""rgba(33, 150, 243, 1)"",
                                                        ""plotLineColorFalling"": ""rgba(33, 150, 243, 1)"",
                                                            ""gridLineColor"": ""rgba(240, 243, 250, 1)"",
                                                                ""scaleFontColor"": ""rgba(120, 123, 134, 1)"",
                                                                    ""belowLineFillColorGrowing"": ""rgba(33, 150, 243, 0.12)"",
                                                                        ""belowLineFillColorFalling"": ""rgba(33, 150, 243, 0.12)"",
                                                                            ""symbolActiveColor"": ""rgba(33, 150, 243, 0.12)"",
                                                                                ""tabs"": [
                                                                                    {
                                                                                        ""title"": ""Ос");
            WriteLiteral(@"новные"",
                                                                                        ""symbols"": [
                                                                                            {
                                                                                                ""s"": ""FOREXCOM:SPXUSD""
                                                                                            },
                                                                                            {
                                                                                                ""s"": ""FOREXCOM:DJI""
                                                                                            },
                                                                                            {
                                                                                                ""s"": ""XETR:DAX""
                                                                                     ");
            WriteLiteral(@"       }
                                                                                        ],
                                                                                        ""originalTitle"": ""Indices""
                                                                                    }
                                                                                ]
            }
        </script>
    </div>
    <!-- TradingView Widget END -->


    <!-- TradingView Widget BEGIN -->
    <div class=""tradingview-widget-container"" id=""stock"">
        <div class=""tradingview-widget-container__widget""></div>
        <div class=""tradingview-widget-copyright""><a href=""https://ru.tradingview.com/markets/indices/"" rel=""noopener"" target=""_blank""><span class=""blue-text"">Активные</span></a> от TradingView</div>
        <script type=""text/javascript"" src=""https://s3.tradingview.com/external-embedding/embed-widget-market-overview.js"" async>
            {
                ""colorTheme"": ""light"",");
            WriteLiteral(@"
                    ""dateRange"": ""12M"",
                        ""showChart"": true,
                            ""locale"": ""ru"",
                                ""largeChartUrl"": ""https://localhost:44347/{tvexchange}/{tvsymbol}"",
                                    ""isTransparent"": false,
                                        ""showSymbolLogo"": true,
                                            ""width"": ""400"",
                                                ""height"": ""660"",
                                                    ""plotLineColorGrowing"": ""rgba(33, 150, 243, 1)"",
                                                        ""plotLineColorFalling"": ""rgba(33, 150, 243, 1)"",
                                                            ""gridLineColor"": ""rgba(240, 243, 250, 1)"",
                                                                ""scaleFontColor"": ""rgba(120, 123, 134, 1)"",
                                                                    ""belowLineFillColorGrowing"": ""rgba(33, 150, 243, ");
            WriteLiteral(@"0.12)"",
                                                                        ""belowLineFillColorFalling"": ""rgba(33, 150, 243, 0.12)"",
                                                                            ""symbolActiveColor"": ""rgba(33, 150, 243, 0.12)"",
                                                                                ""tabs"": [
                                                                                    {
                                                                                        ""title"": ""Активные"",
                                                                                        ""symbols"": [
                                                                                            {
                                                                                                ""s"": ""NASDAQ:AAPL""
                                                                                            },
                                                              ");
            WriteLiteral(@"                              {
                                                                                                ""s"": ""NASDAQ:TSLA""
                                                                                            },
                                                                                            {
                                                                                                ""s"": ""NASDAQ:AAL""
                                                                                            }
                                                                                        ],
                                                                                        ""originalTitle"": ""Indices""
                                                                                    }
                                                                                ]
            }
        </script>
    </div>
    <!-- TradingView Widget END -->


    <!-- ");
            WriteLiteral(@"TradingView Widget BEGIN -->
    <div class=""tradingview-widget-container"" id=""currency"">
        <div class=""tradingview-widget-container__widget""></div>
        <div class=""tradingview-widget-copyright""><a href=""https://ru.tradingview.com/markets/indices/"" rel=""noopener"" target=""_blank""><span class=""blue-text"">Основные</span></a> <span class=""blue-text"">и</span> <a href=""https://ru.tradingview.com/markets/currencies/"" rel=""noopener"" target=""_blank""><span class=""blue-text"">Криптовалюта</span></a> от TradingView</div>
        <script type=""text/javascript"" src=""https://s3.tradingview.com/external-embedding/embed-widget-market-overview.js"" async>
            {
                ""colorTheme"": ""light"",
                    ""dateRange"": ""12M"",
                        ""showChart"": true,
                            ""locale"": ""ru"",
                                ""largeChartUrl"": ""https://localhost:44347/{tvexchange}/{tvsymbol}"",
                                    ""isTransparent"": false,
                  ");
            WriteLiteral(@"                      ""showSymbolLogo"": true,
                                            ""width"": ""400"",
                                                ""height"": ""660"",
                                                    ""plotLineColorGrowing"": ""rgba(33, 150, 243, 1)"",
                                                        ""plotLineColorFalling"": ""rgba(33, 150, 243, 1)"",
                                                            ""gridLineColor"": ""rgba(240, 243, 250, 1)"",
                                                                ""scaleFontColor"": ""rgba(120, 123, 134, 1)"",
                                                                    ""belowLineFillColorGrowing"": ""rgba(33, 150, 243, 0.12)"",
                                                                        ""belowLineFillColorFalling"": ""rgba(33, 150, 243, 0.12)"",
                                                                            ""symbolActiveColor"": ""rgba(33, 150, 243, 0.12)"",
                                               ");
            WriteLiteral(@"                                 ""tabs"": [
                                                                                    {
                                                                                        ""title"": ""Основные"",
                                                                                        ""symbols"": [
                                                                                            {
                                                                                                ""s"": ""FX:EURUSD""
                                                                                            },
                                                                                            {
                                                                                                ""s"": ""FX:GBPUSD""
                                                                                            },
                                                                       ");
            WriteLiteral(@"                     {
                                                                                                ""s"": ""FX_IDC:RUBUSD""
                                                                                            }
                                                                                        ],
                                                                                        ""originalTitle"": ""Indices""
                                                                                    },
                                                                                    {
                                                                                        ""title"": ""Криптовалюта"",
                                                                                        ""symbols"": [
                                                                                            {
                                                                                             ");
            WriteLiteral(@"   ""s"": ""BITSTAMP:BTCUSD""
                                                                                            },
                                                                                            {
                                                                                                ""s"": ""BITSTAMP:ETHUSD""
                                                                                            }
                                                                                        ],
                                                                                        ""originalTitle"": ""Forex""
                                                                                    }
                                                                                ]
            }
        </script>
    </div>
    <!-- TradingView Widget END -->
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IndexModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel>)PageContext?.ViewData;
        public IndexModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
